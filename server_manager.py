#!/usr/bin/env python3
"""
MkDocs Server Manager - –ü—Ä–æ—Å—Ç–æ–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""

import gi
gi.require_version('Gtk', '3.0')
gi.require_version('Vte', '2.91')

from gi.repository import Gtk, Gdk, GLib, Vte, Pango
import subprocess
import os
import webbrowser
import time
import socket

class ServerManager:
    def __init__(self):
        self.server_process = None
        self.venv_activated = False
        self.server_port = 8000
        self.server_url = f"http://localhost:{self.server_port}"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.window = Gtk.Window()
        self.window.set_title("MkDocs Server Manager")
        self.window.set_default_size(800, 600)
        self.window.set_position(Gtk.WindowPosition.CENTER)
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
        self.window.connect("delete-event", self.on_window_close)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_ui()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        self.check_initial_state()
    
    def create_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=10)
        main_box.set_margin_left(20)
        main_box.set_margin_right(20)
        main_box.set_margin_top(20)
        main_box.set_margin_bottom(20)
        self.window.add(main_box)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = Gtk.Label()
        title_label.set_markup("<span size='xx-large' weight='bold'>üöÄ MkDocs Server Manager</span>")
        main_box.pack_start(title_label, False, False, 0)
        
        subtitle_label = Gtk.Label("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
        main_box.pack_start(subtitle_label, False, False, 0)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_box = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL, spacing=15)
        control_box.set_margin_top(20)
        control_box.set_margin_bottom(20)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        self.start_button = Gtk.Button("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        self.start_button.set_size_request(150, 40)
        self.start_button.connect("clicked", self.on_start_server)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        self.stop_button = Gtk.Button("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        self.stop_button.set_size_request(150, 40)
        self.stop_button.connect("clicked", self.on_stop_server)
        self.stop_button.set_sensitive(False)
        
        # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
        self.status_label = Gtk.Label("üî¥ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        self.browser_button = Gtk.Button("üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        self.browser_button.connect("clicked", self.on_open_browser)
        self.browser_button.set_sensitive(False)
        
        control_box.pack_start(self.start_button, False, False, 0)
        control_box.pack_start(self.stop_button, False, False, 0)
        control_box.pack_start(self.status_label, False, False, 0)
        control_box.pack_end(self.browser_button, False, False, 0)
        
        main_box.pack_start(control_box, False, False, 0)
        
        # –¢–µ—Ä–º–∏–Ω–∞–ª
        terminal_label = Gtk.Label("üìü –¢–µ—Ä–º–∏–Ω–∞–ª")
        terminal_label.set_halign(Gtk.Align.START)
        main_box.pack_start(terminal_label, False, False, 0)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ VTE —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
        self.terminal = Vte.Terminal()
        self.terminal.set_size(80, 24)
        self.terminal.set_font(Pango.FontDescription("Monospace 10"))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
        self.terminal.set_colors(
            Gdk.RGBA(0.9, 0.9, 0.9, 1.0),  # foreground
            Gdk.RGBA(0.1, 0.1, 0.1, 1.0),  # background
            []
        )
        
        # –°–∫—Ä–æ–ª–ª–∏–Ω–≥ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
        scrolled_window = Gtk.ScrolledWindow()
        scrolled_window.set_policy(Gtk.PolicyType.AUTOMATIC, Gtk.PolicyType.AUTOMATIC)
        scrolled_window.add(self.terminal)
        scrolled_window.set_size_request(-1, 300)
        
        main_box.pack_start(scrolled_window, True, True, 0)
        
        # –ó–∞–ø—É—Å–∫ bash –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
        self.terminal.spawn_sync(
            Vte.PtyFlags.DEFAULT,
            os.environ['HOME'],
            ["/bin/bash"],
            [],
            GLib.SpawnFlags.DO_NOT_REAP_CHILD,
            None,
            None,
        )
        
        self.window.show_all()
    
    def log_to_terminal(self, message):
        """–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª"""
        command = f'echo "{message}"\n'
        self.terminal.feed_child(command.encode())
    
    def check_initial_state(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        self.log_to_terminal("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if os.path.exists('.venv'):
            self.log_to_terminal("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            self.log_to_terminal("‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
        if self.is_port_in_use(self.server_port):
            self.log_to_terminal(f"‚ö†Ô∏è –ü–æ—Ä—Ç {self.server_port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
        else:
            self.log_to_terminal(f"‚úÖ –ü–æ—Ä—Ç {self.server_port} —Å–≤–æ–±–æ–¥–µ–Ω")
    
    def is_port_in_use(self, port):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –ø–æ—Ä—Ç"""
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            return s.connect_ex(('localhost', port)) == 0
    
    def kill_process_on_port(self, port):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–≥–æ –ø–æ—Ä—Ç"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º lsof –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É
            result = subprocess.run(['lsof', '-ti', f':{port}'], 
                                  capture_output=True, text=True, timeout=5)
            
            if result.returncode == 0 and result.stdout.strip():
                pids = result.stdout.strip().split('\n')
                for pid in pids:
                    if pid:
                        self.log_to_terminal(f"üî™ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ PID: {pid}")
                        try:
                            os.kill(int(pid), 15)  # SIGTERM
                            time.sleep(1)
                        except ProcessLookupError:
                            pass
                return True
        except Exception as e:
            self.log_to_terminal(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        return False
    
    def check_venv_and_dependencies(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        venv_path = os.path.join(os.getcwd(), '.venv')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        if not os.path.exists(venv_path):
            self.log_to_terminal("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
            self.terminal.feed_child(b'python3 -m venv .venv\n')
            time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ mkdocs-material –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        pip_path = os.path.join(venv_path, 'bin', 'pip')
        try:
            result = subprocess.run([pip_path, 'show', 'mkdocs-material'], 
                                  capture_output=True, text=True, timeout=10)
            
            if result.returncode != 0:
                self.log_to_terminal("üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
                self.terminal.feed_child(b'source .venv/bin/activate && pip install -r requirements.txt\n')
                return False  # –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            else:
                self.log_to_terminal("‚úÖ mkdocs-material —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏")
                return True  # –ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
                
        except Exception as e:
            self.log_to_terminal(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
            self.log_to_terminal("üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
            self.terminal.feed_child(b'source .venv/bin/activate && pip install -r requirements.txt\n')
            return False
    
    def is_venv_activated(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
        return os.environ.get('VIRTUAL_ENV') is not None
    
    def on_start_server(self, button):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        self.log_to_terminal("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        if self.check_venv_and_dependencies():
            # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—Ç—å
            GLib.timeout_add(1000, self.continue_server_start)
        else:
            # –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            GLib.timeout_add(8000, self.continue_server_start)
    
    def continue_server_start(self):
        """–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ venv"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞
        if self.is_port_in_use(self.server_port):
            self.log_to_terminal(f"‚ö†Ô∏è –ü–æ—Ä—Ç {self.server_port} –∑–∞–Ω—è—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º...")
            self.kill_process_on_port(self.server_port)
            time.sleep(1)
        
        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫ MkDocs —Å–µ—Ä–≤–µ—Ä–∞
        self.log_to_terminal("üåê –ó–∞–ø—É—Å–∫ MkDocs —Å–µ—Ä–≤–µ—Ä–∞...")
        command = f'source .venv/bin/activate && mkdocs serve --dev-addr=localhost:{self.server_port}\n'
        self.terminal.feed_child(command.encode())
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.start_button.set_sensitive(False)
        self.stop_button.set_sensitive(True)
        self.browser_button.set_sensitive(True)
        
        self.status_label.set_text("üü¢ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
        GLib.timeout_add(3000, self.check_server_and_open_browser)
        
        return False  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä
    
    def check_server_and_open_browser(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞"""
        if self.is_port_in_use(self.server_port):
            self.log_to_terminal("üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
            try:
                webbrowser.open(self.server_url)
                self.log_to_terminal(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞: {self.server_url}")
            except Exception as e:
                self.log_to_terminal(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
        else:
            self.log_to_terminal("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –∂–¥–µ–º...")
            # –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
            GLib.timeout_add(1000, self.check_server_and_open_browser)
        
        return False
    
    def on_stop_server(self, button):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
        self.log_to_terminal("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ Ctrl+C –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        self.terminal.feed_child(b'\x03')  # Ctrl+C
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.start_button.set_sensitive(True)
        self.stop_button.set_sensitive(False)
        self.browser_button.set_sensitive(False)
        
        self.status_label.set_text("üî¥ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        self.log_to_terminal("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def on_open_browser(self, button):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞"""
        if not self.is_port_in_use(self.server_port):
            self.log_to_terminal("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤")
            return
        
        try:
            webbrowser.open(self.server_url)
            self.log_to_terminal(f"üåê –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {self.server_url}")
        except Exception as e:
            self.log_to_terminal(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
            try:
                subprocess.run(['xdg-open', self.server_url], check=True)
                self.log_to_terminal(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —á–µ—Ä–µ–∑ xdg-open: {self.server_url}")
            except Exception as e2:
                self.log_to_terminal(f"‚ùå –û—à–∏–±–∫–∞ xdg-open: {e2}")
    
    def on_window_close(self, window, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        if self.stop_button.get_sensitive():
            self.log_to_terminal("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º...")
            self.terminal.feed_child(b'\x03')  # Ctrl+C
            time.sleep(1)
        
        Gtk.main_quit()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app = ServerManager()
    Gtk.main()

if __name__ == "__main__":
    main()